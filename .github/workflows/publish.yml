# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publicar pacote NuGet

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Testar:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configurar .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Testar
      run: dotnet test ./DevToolz.Library.Test/DevToolz.Library.Test.csproj --verbosity normal

  Publicar:
    runs-on: windows-latest
    needs: Testar

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Configurar .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Compilar projeto
      run: dotnet build ./DevToolz.Library/DevToolz.Library.csproj -c Release

    - name: Empacotar
      run: dotnet pack ./DevToolz.Library/DevToolz.Library.csproj -c Release -o ./output

    - name: Obter o nome do pacote
      id: capture-package
      run: |
        echo "PACKAGE_NAME=$(ls ./output/*.nupkg)" >> $GITHUB_ENV
        echo "$GITHUB_ENV"

    - name: Enviar para nuget.org
      run: dotnet nuget push "$PACKAGE_NAME" --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json
